"use strict";(self.webpackChunkfresher_training_doc=self.webpackChunkfresher_training_doc||[]).push([[97],{7452:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=t(4848),a=t(8453);const r={},c="Tween",i={id:"Topics/tween",title:"Tween",description:'Tween (short for "in-between") refers to a technique used to create smooth transitions between values over time. It involves calculating intermediate values between a start and end point to animate properties such as position, size, color, or other attributes of objects.',source:"@site/docs/Topics/1.tween.md",sourceDirName:"Topics",slug:"/Topics/tween",permalink:"/fresher-training-doc/docs/Topics/tween",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Topics/1.tween.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Vector",permalink:"/fresher-training-doc/docs/Topics/vector"},next:{title:"Object pool",permalink:"/fresher-training-doc/docs/Topics/pool"}},o={},d=[{value:"Create a Tween",id:"create-a-tween",level:3},{value:"Easing",id:"easing",level:3},{value:"More configurations",id:"more-configurations",level:3},{value:"Tween Manager",id:"tween-manager",level:3},{value:"Events",id:"events",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tween",children:"Tween"})}),"\n",(0,s.jsxs)(n.p,{children:['Tween (short for "in-between") refers to a technique used to create smooth transitions between values over time. It involves calculating intermediate values between a start and end point to animate properties such as position, size, color, or other attributes of objects. ',(0,s.jsx)("br",{}),"\nBasically, tween is a way to change one or many number values over a specific duration of time."]}),"\n",(0,s.jsx)(n.h3,{id:"create-a-tween",children:"Create a Tween"}),"\n",(0,s.jsx)(n.p,{children:"First, we will need an object to use our tween."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// represents all game objects in the game\nclass GameObject {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.color = "black";\n    }\n}\n\nclass Circle extends GameObject {\n    constructor() {\n        super();\n        this.radius = 100;\n    }\n\n    render(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.stroke();\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Let's create a ",(0,s.jsx)(n.code,{children:"Tween"})," class that receive a ",(0,s.jsx)(n.strong,{children:"source value"})," and interpolate it to a ",(0,s.jsx)(n.strong,{children:"target value"})," over a ",(0,s.jsx)(n.strong,{children:"duration"})," of time."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, duration) {\n        this.source = source;\n        this.target = target;\n        this.duration = duration;\n        this.elapsed = 0;\n    }\n\n    update(deltaTime) {\n        this.elapsed += deltaTime;\n        \n        // clamp the elapsed time to the duration\n        if (this.elapsed >= this.duration) {\n            this.elapsed = this.duration;\n        }\n        \n        // linear interpolation\n        return this.source + (this.target - this.source) * (this.elapsed / this.duration);\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now, we can use the ",(0,s.jsx)(n.code,{children:"Tween"})," class to animate the ",(0,s.jsx)(n.code,{children:"circle"})," position."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// create the circle\nconst circle = new Circle();\ncircle.x = 100;\ncircle.y = 100;\ncircle.color = "#ff8080";\n\nconst tween = new Tween(circle.x, 500, 3); // move the circle to x = 500 in 3 seconds\n\nfunction update(dt) {\n    circle.x = tween.update(dt); // update the tween\n}\n\nfunction render() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // clear the canvas\n    circle.render(ctx); // render the circle\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(4966).A+"",width:"597",height:"243"})}),"\n",(0,s.jsxs)(n.p,{children:["This is the basic idea of a tween. We interpolate the ",(0,s.jsx)(n.code,{children:"x"})," value of the circle from ",(0,s.jsx)(n.code,{children:"100"})," to ",(0,s.jsx)(n.code,{children:"500"})," in ",(0,s.jsx)(n.code,{children:"3"})," seconds. The ",(0,s.jsx)(n.code,{children:"update"})," function will return the interpolated value, and we assign it to the ",(0,s.jsx)(n.code,{children:"x"})," property of the circle.",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(n.p,{children:["Let's translate ",(0,s.jsx)(n.code,{children:"y"})," as well"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const tweenX = new Tween(circle.x, 500, 3); // move the circle to x = 500 in 3 seconds\nconst tweenY = new Tween(circle.y, 300, 3); // move the circle to y = 300 in 3 seconds\n\nfunction update(dt) {\n    circle.x = tweenX.update(dt);\n    circle.y = tweenY.update(dt);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(9215).A+"",width:"600",height:"347"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we have a problem. Anytime we want to animate a new property, we have to create a new ",(0,s.jsx)(n.code,{children:"Tween"})," object, update it and assign the value to the object property. This can be cumbersome if we have many properties to animate.",(0,s.jsx)("br",{}),"\nTo solve this, we can make our ",(0,s.jsx)(n.code,{children:"Tween"})," class receive an object as the ",(0,s.jsx)(n.strong,{children:"source"})," and another object as the ",(0,s.jsx)(n.strong,{children:"target"}),". And then update the corresponding properties."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'class Tween {\n    constructor(source, target, duration) {\n        if (typeof source !== "object" || typeof target !== "object") {\n            throw new Error("source and target must be objects");\n        }\n        \n        ...\n        // get the keys that need to be tweened\n        this.keys = Object.keys(this.target);\n        \n        // store the start values\n        this.start = {};\n        for (let key of this.keys) {\n            this.start[key] = this.source[key];\n        }\n    }\n\n    update(deltaTime) {\n        ...\n        // linear interpolation for all keys\n        for (let key of this.keys) {\n            if (!this.source.hasOwnProperty(key)) {\n                continue;\n            }\n            this.source[key] = this.start[key] + (this.target[key] - this.start[key]) * (this.elapsed / this.duration);\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// move the circle to x = 500 and y = 300 in 3 seconds\nconst tween = new Tween(circle, { x: 500, y: 300 }, 3);\nfunction update(dt) {\n    tween.update(dt);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Because we are updating the object properties directly, we need a ",(0,s.jsx)(n.strong,{children:"start"})," object to store the initial values for interpolation.",(0,s.jsx)("br",{}),"\nNow we have a same animation for both ",(0,s.jsx)(n.code,{children:"x"})," and ",(0,s.jsx)(n.code,{children:"y"})," properties without creating a new ",(0,s.jsx)(n.code,{children:"Tween"})," for each one. Let's try to animate the ",(0,s.jsx)(n.code,{children:"radius"})," as well."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const tween = new Tween(circle, { x: 500, y: 300, radius: 200 }, 3);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(200).A+"",width:"600",height:"440"})}),"\n",(0,s.jsx)(n.h3,{id:"easing",children:"Easing"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Tween"})," class we created uses a linear interpolation to animate the properties. This means the object will move at a constant speed from the start to the end. But in most cases, objects don\u2019t just start and stop instantly, and almost never move at a constant speed. When we open a drawer, we first move it quickly, and slow it down as it comes out. Drop something on the floor, and it will first accelerate downwards, and then bounce back up after hitting the floor.",(0,s.jsx)("br",{}),"\nEasing functions are mathematical functions that specify the rate of change of a parameter over time. They can be used to create effects like acceleration, deceleration, or bouncing.",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    easeInSine(progress) {\n        return 1 - Math.cos((progress * Math.PI) / 2);\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.em,{children:"Sine In"})," easing function will receive a ",(0,s.jsx)(n.code,{children:"progress"})," value between ",(0,s.jsx)(n.code,{children:"0"})," and ",(0,s.jsx)(n.code,{children:"1"})," and return a new value between ",(0,s.jsx)(n.code,{children:"0"})," and ",(0,s.jsx)(n.code,{children:"1"}),". This value will be used to interpolate the properties."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"this.source[key] = this.start[key] + (this.target[key] - this.start[key]) * this.easeInSine(this.elapsed / this.duration);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(6176).A+"",width:"600",height:"536"})}),"\n",(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.code,{children:"Circle"})," object will move faster at the beginning and slow down as it reaches the target position. This is the ",(0,s.jsx)(n.em,{children:"Sine In"})," easing function. There are many more, ",(0,s.jsx)(n.a,{href:"https://easings.net/#",children:"easings.net"})," is a great resource to visualize and test different easing functions. Let's add them to our ",(0,s.jsx)(n.code,{children:"Tween"})," class as static functions to make them accessible from anywhere."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    static easeLinear(x) {\n        return x;\n    }\n\n    static easeInSine(x) {\n        return 1 - Math.cos((x * Math.PI) / 2);\n    }\n\n    static easeOutSine(x) {\n        return Math.sin((x * Math.PI) / 2);\n    }\n\n    static easeInOutSine(x) {\n        return -(Math.cos(Math.PI * x) - 1) / 2;\n    }\n\n    static easeInQuad(x) {\n        return x * x;\n    }\n\n    static easeOutQuad(x) {\n        return 1 - (1 - x) * (1 - x);\n    }\n\n    static easeInOutQuad(x) {\n        return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\n    }\n\n    static easeInCubic(x) {\n        return x * x * x;\n    }\n\n    static easeOutCubic(x) {\n        return 1 - Math.pow(1 - x, 3);\n    }\n\n    static easeInOutCubic(x) {\n        return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n    }\n\n    static easeInQuart(x) {\n        return x * x * x * x;\n    }\n\n    static easeOutQuart(x) {\n        return 1 - Math.pow(1 - x, 4);\n    }\n\n    static easeInOutQuart(x) {\n        return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2;\n    }\n\n    static easeInQuint(x) {\n        return x * x * x * x * x;\n    }\n\n    static easeOutQuint(x) {\n        return 1 - Math.pow(1 - x, 5);\n    }\n\n    static easeInOutQuint(x) {\n        return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n    }\n\n    static easeInExpo(x) {\n        return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n    }\n\n    static easeOutExpo(x) {\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n    }\n\n    static easeInOutExpo(x) {\n        return x === 0\n            ? 0\n            : x === 1\n                ? 1\n                : x < 0.5\n                    ? Math.pow(2, 20 * x - 10) / 2\n                    : (2 - Math.pow(2, -20 * x + 10)) / 2;\n    }\n\n    static easeInCirc(x) {\n        return 1 - Math.sqrt(1 - Math.pow(x, 2));\n    }\n\n    static easeOutCirc(x) {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }\n\n    static easeInOutCirc(x) {\n        return x < 0.5\n            ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n            : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n    }\n\n    static easeInBack(x) {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return c3 * x * x * x - c1 * x * x;\n    }\n\n    static easeOutBack(x) {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    }\n\n    static easeInOutBack(x) {\n        const c1 = 1.70158;\n        const c2 = c1 * 1.525;\n        return x < 0.5\n            ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n            : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n    }\n\n    static easeInElastic(x) {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0\n            ? 0\n            : x === 1\n                ? 1\n                : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n    }\n\n    static easeOutElastic(x) {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0\n            ? 0\n            : x === 1\n                ? 1\n                : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    }\n\n    static easeInOutElastic(x) {\n        const c5 = (2 * Math.PI) / 4.5;\n        return x === 0\n            ? 0\n            : x === 1\n                ? 1\n                : x < 0.5\n                    ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n                    : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1;\n    }\n\n    static easeInBounce(x) {\n        return 1 - Tween.easeOutBounce(1 - x);\n    }\n\n    static easeOutBounce(x) {\n        const n1 = 7.5625;\n        const d1 = 2.75;\n        if (x < 1 / d1) {\n            return n1 * x * x;\n        } else if (x < 2 / d1) {\n            return n1 * (x -= 1.5 / d1) * x + 0.75;\n        } else if (x < 2.5 / d1) {\n            return n1 * (x -= 2.25 / d1) * x + 0.9375;\n        } else {\n            return n1 * (x -= 2.625 / d1) * x + 0.984375;\n        }\n    }\n\n    static easeInOutBounce(x) {\n        return x < 0.5\n            ? (1 - Tween.easeOutBounce(1 - 2 * x)) / 2\n            : (1 + Tween.easeOutBounce(2 * x - 1)) / 2;\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we change our ",(0,s.jsx)(n.code,{children:"Tween"})," class to receive an easing function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, duration, easing = Tween.easeLinear) {\n        ...\n        this.easing = easing;\n    }\n\n    update(deltaTime) {\n        ...\n        for (let key of this.keys) {\n            if (!this.source.hasOwnProperty(key)) {\n                continue;\n            }\n            this.source[key] = this.start[key] + (this.target[key] - this.start[key]) * this.easing(this.elapsed / this.duration);\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const tween = new Tween(circle, { x: 300, y: 300, radius: 200 }, 2, Tween.easeInOutBounce);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(6405).A+"",width:"600",height:"412"})}),"\n",(0,s.jsx)(n.h3,{id:"more-configurations",children:"More configurations"}),"\n",(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.code,{children:"Tween"})," class is animating the properties of an object from a start value to an end value over a duration of time with an easing function. We can add more configurations to it, like ",(0,s.jsx)(n.strong,{children:"delay"}),", ",(0,s.jsx)(n.strong,{children:"repeat"}),", ",(0,s.jsx)(n.strong,{children:"yoyo"}),".",(0,s.jsx)("br",{}),"\nFirst, we need to change the ",(0,s.jsx)(n.code,{children:"Tween"})," class to receive a ",(0,s.jsx)(n.strong,{children:"config"})," object to store all these configurations instead of passing them as arguments to make the constructor more readable."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, config = {}) {\n        ...\n        this.duration = config.duration || 1;\n        this.easing = config.easing || Tween.easeLinear;\n        ...\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we can add the ",(0,s.jsx)(n.strong,{children:"delay"})," configuration."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    this.delay = config.delay || 0;\n    this.elapsed = -this.delay;\n    \n    update(deltaTime) {\n        this.elapsed += deltaTime;\n        \n        if (this.elapsed < 0) {\n            return;\n        }\n        \n        ...\n    }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    const tween = new Tween(circle,\n    {\n        x: 300,\n        y: 300,\n        radius: 200\n    },\n    {\n        delay: 2,\n        duration: 2,\n        easing: Tween.easeInOutBounce\n    });\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(9867).A+"",width:"600",height:"448"})}),"\n",(0,s.jsxs)(n.p,{children:["Let add ",(0,s.jsx)(n.strong,{children:"repeat"})," to make the tween repeat a number of times and ",(0,s.jsx)(n.strong,{children:"yoyo"})," to make it go back and forth."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    this.repeat = config.repeat || 0;\n    this.yoyo = config.yoyo || false;\n    this.repeatCount = 0;\n    \n    update(deltaTime) {\n        this.elapsed += deltaTime;\n    \n        if (this.elapsed >= this.duration) {\n            // tween finished or repeated\n            if (this.repeatCount < this.repeat) {\n                this.onRepeat();\n                this.elapsed = -this.delay; // reset the elapsed time\n                this.repeatCount++;\n            }\n            else {\n                this.elapsed = this.duration;\n            }\n        }\n    \n        if (this.elapsed < 0) {\n            return;\n        }\n        \n        ...\n    }\n\n    onRepeat() {\n        if (this.yoyo) {\n            // swap start and target to create a yoyo effect\n            for (let key of this.keys) {\n                let temp = this.start[key];\n                this.start[key] = this.target[key];\n                this.target[key] = temp;\n            }\n        }\n        else {\n            // reset the properties\n            for (let key of this.keys) {\n                this.source[key] = this.start[key];\n            }\n        }\n    }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    const tween = new Tween(circle,\n    {\n        x: 300,\n        y: 300,\n        radius: 200\n    },\n    {\n        delay: 1,\n        duration: 2,\n        easing: Tween.easeInOutBounce,\n        repeat: 2,\n        yoyo: true\n    });\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(2075).A+"",width:"600",height:"534"})}),"\n",(0,s.jsxs)(n.p,{children:["We can set the ",(0,s.jsx)(n.code,{children:"repeat"})," to ",(0,s.jsx)(n.code,{children:"Infinity"})," to make the tween loop forever."]}),"\n",(0,s.jsx)(n.h3,{id:"tween-manager",children:"Tween Manager"}),"\n",(0,s.jsxs)(n.p,{children:["Let's create another object with another ",(0,s.jsx)(n.code,{children:"Tween"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const circle1 = new Circle();\ncircle1.x = 100;\ncircle1.y = 100;\ncircle1.color = "#ff8080";\n\nconst circle2 = new Circle();\ncircle2.x = 400;\ncircle2.y = 300;\ncircle2.color = "#0099b0";\n\nconst tweenCircle1 = new Tween(circle1, { x: 300, y: 300 }, { duration: 2 });\nconst tweenCircle2 = new Tween(circle2, { x: 200, y: 200 }, { duration: 2 });\n\nfunction update(dt) {\n    tweenCircle1.update(dt);\n    tweenCircle2.update(dt);\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(6295).A+"",width:"600",height:"403"})}),"\n",(0,s.jsxs)(n.p,{children:["Now image you have hundreds of objects and you want to animate them. You will have to create a ",(0,s.jsx)(n.code,{children:"Tween"})," for each object and update them in the ",(0,s.jsx)(n.code,{children:"update"})," loop. This can be cumbersome and error-prone.",(0,s.jsx)("br",{}),"\nTo solve this, we can create a ",(0,s.jsx)(n.code,{children:"TweenManager"})," class that will handle all the tweens for us. It will be a static class and can be accessed from anywhere in the game."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class TweenManager {\n    static tweens = [];\n\n    static create(source, target, config) {\n        const tween = new Tween(source, target, config);\n        this.tweens.push(tween);\n        return tween;\n    }\n\n    static update(dt) {\n        for (let tween of this.tweens) {\n            tween.update(dt);\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"TweenManager.create(circle1, { x: 300, y: 300 }, { duration: 2 });\nTweenManager.create(circle2, { x: 200, y: 200 }, { duration: 2 });\n\nfunction update(dt) {\n    TweenManager.update(dt);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.p,{children:["We can add events to our ",(0,s.jsx)(n.code,{children:"Tween"})," class to notify when the tween starts, ends, repeats, etc. These events can be used to trigger other actions in the game, or to chain tweens together.",(0,s.jsx)("br",{}),"\nFirst, let's make our ",(0,s.jsx)(n.code,{children:"Tween"})," only update when it is active."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, config) {\n    ...\n        this.active = false;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class TweenManager {\n    static update(dt) {\n        for (let tween of this.tweens) {\n            if (tween.active) {\n                tween.update(dt);\n            }\n        }\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then add a ",(0,s.jsx)(n.code,{children:"play"})," function to activate the ",(0,s.jsx)(n.code,{children:"Tween"})," and call the ",(0,s.jsx)(n.code,{children:"onStart"})," event."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, config) {\n        ...\n        this.onStartCallback = config.onStart || null;\n        ...\n    }\n    \n    start() {\n        this.active = true;\n        this.onStartCallback?.();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    const tweenCircle2 = TweenManager.create(circle2, {x: 200, y: 200}, {duration: 2});\n    const tweenCircle1 = TweenManager.create(circle1,\n        {\n            x: 300,\n            y: 300\n        },\n        {\n            duration: 2,\n            onStart: () => {\n                tweenCircle2.play();\n            }\n        });\n    tweenCircle1.play();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now the ",(0,s.jsx)(n.code,{children:"tweenCircle2"})," will start when the ",(0,s.jsx)(n.code,{children:"tweenCircle1"})," starts. It has the same animation as before but that's the idea.",(0,s.jsx)("br",{}),"\nLet's add the ",(0,s.jsx)(n.strong,{children:"complete"})," event."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, config) {\n        ...\n        this.onCompleteCallback = config.onComplete || null;\n        ...\n    }\n\n    onComplete() {\n        this.active = false;\n        this.onCompleteCallback?.();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"    const tweenCircle2 = TweenManager.create(circle2, {x: 200, y: 200}, { duration: 2 });\n    const tweenCircle1 = TweenManager.create(circle1,\n        {\n            x: 300,\n            y: 300\n        },\n        {\n            duration: 2,\n            onComplete: () => {\n                tweenCircle2.play();\n                TweenManager.create(circle1, { x: 350, y: 100 }, { duration: 2 }).play();\n            }\n        });\n    tweenCircle1.play();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(8270).A+"",width:"600",height:"392"})}),"\n",(0,s.jsxs)(n.p,{children:["Now the ",(0,s.jsx)(n.code,{children:"tweenCircle2"})," will start and another tween created to move ",(0,s.jsx)(n.code,{children:"circle1"})," when the ",(0,s.jsx)(n.code,{children:"tweenCircle1"})," ends. This is called ",(0,s.jsx)(n.strong,{children:"chained tween"}),". Many animations will require a sequence of tweens to be played one after the other. Call the ",(0,s.jsx)(n.code,{children:"play"})," function of the next tween in the ",(0,s.jsx)(n.code,{children:"onComplete"})," event for a numberous of tweens is not a good idea. We should create a ",(0,s.jsx)(n.code,{children:"TweenSequence"})," class that managed by ",(0,s.jsx)(n.code,{children:"TweenManager"})," or just a ",(0,s.jsx)(n.code,{children:"chain"})," function for ",(0,s.jsx)(n.code,{children:"Tween"})," class. But that is another story, you can implement it yourself.",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(n.p,{children:["Let's add the ",(0,s.jsx)(n.strong,{children:"update"})," and ",(0,s.jsx)(n.strong,{children:"repeat"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Tween {\n    constructor(source, target, config) {\n        ...\n        this.onUpdateCallback = config.onUpdate;\n        this.onRepeatCallback = config.onRepeat;\n    }\n\n    update(deltaTime) {\n        ...\n        this.onUpdateCallback?.();\n    }\n    \n    onRepeat() {\n        ...\n        this.onRepeatCallback?.();\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Tween"})," class is now complete. You can implement more configurations, events and functions to make it more powerful and flexible.",(0,s.jsx)("br",{}),"\nThe animations in this article are simple and boring. Try make something more interesting and creative.",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const circle = new Circle();\n    circle.x = 100;\n    circle.y = 100;\n    circle.radius = 20;\n    circle.color = "#ff8080";\n\n    TweenManager.create(circle, {x: 700}, {\n        duration: 1,\n        repeat: Infinity,\n        yoyo: true,\n        easing: Tween.easeInOutCubic\n    }).play();\n\n    TweenManager.create(circle, {y: 500}, {\n        duration: 5,\n        repeat: Infinity,\n        yoyo: true,\n        easing: Tween.easeInOutBounce\n    }).play();\n\n    TweenManager.create(circle, {radius: 50}, {\n        duration: 0.25,\n        repeat: Infinity,\n        yoyo: true,\n        easing: Tween.easeInOutCubic\n    }).play();\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(237).A+"",width:"600",height:"553"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8270:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-chained-c3abeb4b71ca4ebc88450966d1901a4a.gif"},9867:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-delay-34b328e675acc13dc1b02985ea13f712.gif"},237:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-end-8e4a705128c1f7c9a730a52d2cd4200f.gif"},6405:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-inoutbounce-9578ae464e5ae20c48762ad831a011c5.gif"},6176:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-insine-32489d23616699440ad1ec272bb07d1f.gif"},6295:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-manager-e829d078a6af1fd4ed2ff0aa3f70d1bb.gif"},200:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-radius-51ffce35008d97a5ac14b60b2228b3d0.gif"},2075:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-repeat-cb2e6fb58088e082504159d9c9c1b119.gif"},4966:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-x-a55f21562efd289adb922e49ba4d47d3.gif"},9215:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/tween-y-f8ced5ddbd2f87148455b3a5e52874ad.gif"},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(6540);const a={},r=s.createContext(a);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);