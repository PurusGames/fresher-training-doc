"use strict";(self.webpackChunkfresher_training_doc=self.webpackChunkfresher_training_doc||[]).push([[97],{7452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(4848),s=n(8453);const i={},c="Tween",a={id:"Topics/tween",title:"Tween",description:'Tween (short for "in-between") refers to a technique used to create smooth transitions between values over time. It involves calculating intermediate values between a start and end point to animate properties such as position, size, color, or other attributes of objects.',source:"@site/docs/Topics/1.tween.md",sourceDirName:"Topics",slug:"/Topics/tween",permalink:"/fresher-training-doc/docs/Topics/tween",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Topics/1.tween.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Vector",permalink:"/fresher-training-doc/docs/Topics/vector"}},o={},l=[{value:"Create a Tween",id:"create-a-tween",level:3}];function d(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"tween",children:"Tween"})}),"\n",(0,r.jsxs)(t.p,{children:['Tween (short for "in-between") refers to a technique used to create smooth transitions between values over time. It involves calculating intermediate values between a start and end point to animate properties such as position, size, color, or other attributes of objects. ',(0,r.jsx)("br",{}),"\r\nBasically, tween is a way to change one or many number values over a specific duration of time."]}),"\n",(0,r.jsx)(t.h3,{id:"create-a-tween",children:"Create a Tween"}),"\n",(0,r.jsx)(t.p,{children:"First, we will need an object to use our tween."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'// represents all game objects in the game\r\nclass GameObject {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = "black";\r\n    }\r\n}\r\n\r\nclass Circle extends GameObject {\r\n    constructor() {\r\n        super();\r\n        this.radius = 100;\r\n    }\r\n\r\n    render(ctx) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Let's create a ",(0,r.jsx)(t.code,{children:"Tween"})," class that receive a ",(0,r.jsx)(t.strong,{children:"source value"})," and interpolate it to a ",(0,r.jsx)(t.strong,{children:"target value"})," over a ",(0,r.jsx)(t.strong,{children:"duration"})," of time."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"class Tween {\r\n    constructor(source, target, duration) {\r\n        this.source = source;\r\n        this.target = target;\r\n        this.duration = duration;\r\n        this.elapsed = 0;\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.elapsed += deltaTime;\r\n        \r\n        // clamp the elapsed time to the duration\r\n        if (this.elapsed >= this.duration) {\r\n            this.elapsed = this.duration;\r\n        }\r\n        \r\n        // linear interpolation\r\n        return this.source + (this.target - this.source) * (this.elapsed / this.duration);\r\n    }\r\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now, we can use the ",(0,r.jsx)(t.code,{children:"Tween"})," class to animate the ",(0,r.jsx)(t.code,{children:"circle"})," position."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'// create the circle\r\nconst circle = new Circle();\r\ncircle.x = 100;\r\ncircle.y = 100;\r\ncircle.color = "#ff8080";\r\n\r\nconst tween = new Tween(circle.x, 500, 3); // move the circle to x = 500 in 3 seconds\r\n\r\nfunction update(dt) {\r\n    circle.x = tween.update(dt); // update the tween\r\n}\r\n\r\nfunction render() {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // clear the canvas\r\n    circle.render(ctx); // render the circle\r\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var r=n(6540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);