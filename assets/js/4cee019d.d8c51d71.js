"use strict";(self.webpackChunkfresher_training_doc=self.webpackChunkfresher_training_doc||[]).push([[796],{2951:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Fresher Training Program","href":"/fresher-training-doc/docs/program","docId":"program","unlisted":false},{"type":"category","label":"2d-context","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/fresher-training-doc/docs/2d-context/introduction","docId":"2d-context/introduction","unlisted":false},{"type":"link","label":"Set-up an HTML5 canvas","href":"/fresher-training-doc/docs/2d-context/canvas-setup","docId":"2d-context/canvas-setup","unlisted":false},{"type":"link","label":"Draw shapes, paths and texts","href":"/fresher-training-doc/docs/2d-context/shapes-paths-text","docId":"2d-context/shapes-paths-text","unlisted":false},{"type":"link","label":"Game Loop","href":"/fresher-training-doc/docs/2d-context/game-loop","docId":"2d-context/game-loop","unlisted":false},{"type":"link","label":"Canvas animation","href":"/fresher-training-doc/docs/2d-context/canvas-animation","docId":"2d-context/canvas-animation","unlisted":false},{"type":"link","label":"Collision detection and physics","href":"/fresher-training-doc/docs/2d-context/physics","docId":"2d-context/physics","unlisted":false},{"type":"link","label":"Images and sprite animations","href":"/fresher-training-doc/docs/2d-context/animation","docId":"2d-context/animation","unlisted":false}]},{"type":"category","label":"webgl","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/fresher-training-doc/docs/webgl/introduction","docId":"webgl/introduction","unlisted":false},{"type":"link","label":"Fundamentals","href":"/fresher-training-doc/docs/webgl/webgl-funamentals","docId":"webgl/webgl-funamentals","unlisted":false},{"type":"link","label":"How it works","href":"/fresher-training-doc/docs/webgl/webgl-how-it-works","docId":"webgl/webgl-how-it-works","unlisted":false},{"type":"link","label":"Image Processing","href":"/fresher-training-doc/docs/webgl/webgl-image-processing","docId":"webgl/webgl-image-processing","unlisted":false}]}]},"docs":{"2d-context/animation":{"id":"2d-context/animation","title":"Images and sprite animations","description":"Draw your own images on the canvas and learn how to stretch, scale and rotate them. Use clipping on sprites to create sprite animations. By the end of this tutorial you can draw your own images and animations on the canvas and use them in a game.","sidebar":"tutorialSidebar"},"2d-context/canvas-animation":{"id":"2d-context/canvas-animation","title":"Canvas animation","description":"Create an animation on the HTML5 canvas and make it run smooth, no matter the frame rate. Learn how to apply time and easing functions. By the end of this tutorial, you can create a basic animation with the use JavaScript.","sidebar":"tutorialSidebar"},"2d-context/canvas-setup":{"id":"2d-context/canvas-setup","title":"Set-up an HTML5 canvas","description":"What is an HTML5 canvas?","sidebar":"tutorialSidebar"},"2d-context/game-loop":{"id":"2d-context/game-loop","title":"Game Loop","description":"Create a proper game loop in JavaScript and learn about frame rates. Measure and display fps to see your loop in action. Request animation frames and have your own loop running by the end of this HTML5 game tutorial.","sidebar":"tutorialSidebar"},"2d-context/introduction":{"id":"2d-context/introduction","title":"Introduction","description":"What is an HTML5 game?","sidebar":"tutorialSidebar"},"2d-context/physics":{"id":"2d-context/physics","title":"Collision detection and physics","description":"Perform collision detection and react with physics, using JavaScript. Check for overlap between shapes, apply hitboxes and calculate new velocities. Make it more natural with object mass, gravity and restitution. By the end of this tutorial, you\'ll have a basic physics simulation running in your game.","sidebar":"tutorialSidebar"},"2d-context/shapes-paths-text":{"id":"2d-context/shapes-paths-text","title":"Draw shapes, paths and texts","description":"Draw graphics on the HTML5 canvas using shapes and paths. Create rectangles, circles, lines, triangles and more complex shapes using SVG paths. By the end of this tutorial you can draw your own graphics and text on the canvas.","sidebar":"tutorialSidebar"},"program":{"id":"program","title":"Fresher Training Program","description":"2D HTML5 Game","sidebar":"tutorialSidebar"},"webgl/introduction":{"id":"webgl/introduction","title":"Introduction","description":"What is this tutorial about?","sidebar":"tutorialSidebar"},"webgl/webgl-funamentals":{"id":"webgl/webgl-funamentals","title":"Fundamentals","description":"WebGL (Web Graphics Library) is often thought of as a 3D API. People think \\"I\'ll use WebGL and magic, I\'ll get cool 3d\\". In reality, WebGL is just a rasterization engine. It draws points, lines, and triangles based on code you supply. Getting WebGL to do anything else is up to you to provide code to use points, lines, and triangles to accomplish your task.","sidebar":"tutorialSidebar"},"webgl/webgl-how-it-works":{"id":"webgl/webgl-how-it-works","title":"How it works","description":"This tutorial will explain the basic level of what WebGL and your GPU actually do. There are basically 2 parts to this GPU thing. The first part processes vertices (or streams of data) into clip space vertices. The second part draws pixels based on the first part.","sidebar":"tutorialSidebar"},"webgl/webgl-image-processing":{"id":"webgl/webgl-image-processing","title":"Image Processing","description":"To draw images in WebGL we need to use textures. Similarly to the way WebGL expects clip space coordinates when rendering instead of pixels, WebGL expects texture coordinates when reading a texture. Texture coordinates go from 0.0 to 1.0 no matter the dimensions of the texture.","sidebar":"tutorialSidebar"}}}}')}}]);